/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import models.EnderecoVO;
import models.Garbage;
import models.UsuarioVO;
import services.EnderecoServices;
import services.ServicesFactory;
import services.UsuarioServices;

/**
 *
 * @author Luan Junior
 */
public class GUIMenuPrincipal extends javax.swing.JFrame implements InternalFrameListener{
    private UsuarioVO userLogado = new UsuarioVO(); 
    private boolean flagEditPerfil = false;
    private boolean flagEditSenha = false;
    private boolean flagEditEndereco = false;
    private boolean flagAdcImagem = false;
    private boolean flagChat = false;
    private boolean flagExcluirConta = false;
    private boolean flagViewUsuarios = false;
    private boolean flagViewMensagensGrupo = false;
    private boolean flagDetalhe = false;
    private ArrayList<UsuarioVO> usuarios = new ArrayList<>();
    /**
     * Creates new form GUIMenuPrincipal
     * @param userLogado captura a pessoa que se logou :D
     */
    public GUIMenuPrincipal(UsuarioVO userLogado) {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        this.userLogado = userLogado;
        
        if(!userLogado.getEmail().equalsIgnoreCase("admin@gmail.com")){
            jmAdmin.setVisible(false);
        }
        new Thread(new GUIMenuPrincipal.ExecutarLongPolling()).start();
        mostrarUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtDesktop = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlLista = new javax.swing.JList<>();
        jbIniciarChat = new javax.swing.JButton();
        jbDetalhe = new javax.swing.JButton();
        jmbMenu = new javax.swing.JMenuBar();
        jmUsuario = new javax.swing.JMenu();
        jmiAlterarFoto = new javax.swing.JMenuItem();
        jmiEditarPerfil = new javax.swing.JMenuItem();
        jmiSenha = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiDeslogar = new javax.swing.JMenuItem();
        jmiSair = new javax.swing.JMenuItem();
        jmEndereco = new javax.swing.JMenu();
        jmiAlterarEndereco = new javax.swing.JMenuItem();
        jmConfiguracao = new javax.swing.JMenu();
        jmiExcluirConta = new javax.swing.JMenuItem();
        jmAdmin = new javax.swing.JMenu();
        jmiViewUsuario = new javax.swing.JMenuItem();
        jmiViewMsg = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Inicial Seja bem Vindo(a) ao Chat");
        setResizable(false);

        jlLista.setBackground(new java.awt.Color(204, 204, 255));
        jlLista.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlLista.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlLista.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jlLista);

        jbIniciarChat.setText("Iniciar Chat com o Grupo");
        jbIniciarChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIniciarChatActionPerformed(evt);
            }
        });

        jbDetalhe.setText("Ver Detalhe");
        jbDetalhe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDetalheActionPerformed(evt);
            }
        });
        jbDetalhe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbDetalheKeyPressed(evt);
            }
        });

        jtDesktop.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jtDesktop.setLayer(jbIniciarChat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jtDesktop.setLayer(jbDetalhe, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jtDesktopLayout = new javax.swing.GroupLayout(jtDesktop);
        jtDesktop.setLayout(jtDesktopLayout);
        jtDesktopLayout.setHorizontalGroup(
            jtDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jtDesktopLayout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(jtDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbIniciarChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbDetalhe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jtDesktopLayout.setVerticalGroup(
            jtDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
            .addGroup(jtDesktopLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jbIniciarChat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jbDetalhe, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jmUsuario.setText("Editar Usuário");

        jmiAlterarFoto.setText("Adc/Alterar Foto");
        jmiAlterarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarFotoActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiAlterarFoto);

        jmiEditarPerfil.setText("Editar Perfil");
        jmiEditarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEditarPerfilActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiEditarPerfil);

        jmiSenha.setText("Trocar Senha");
        jmiSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSenhaActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiSenha);
        jmUsuario.add(jSeparator1);

        jmiDeslogar.setText("Deslogar");
        jmiDeslogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDeslogarActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiDeslogar);

        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiSair);

        jmbMenu.add(jmUsuario);

        jmEndereco.setText("Editar Endereço");

        jmiAlterarEndereco.setText("Endereço");
        jmiAlterarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarEnderecoActionPerformed(evt);
            }
        });
        jmEndereco.add(jmiAlterarEndereco);

        jmbMenu.add(jmEndereco);

        jmConfiguracao.setText("Configuração");

        jmiExcluirConta.setText("Excluir Conta");
        jmiExcluirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExcluirContaActionPerformed(evt);
            }
        });
        jmConfiguracao.add(jmiExcluirConta);

        jmbMenu.add(jmConfiguracao);

        jmAdmin.setText("Area Administrativa");

        jmiViewUsuario.setText("Visualizar Usuários");
        jmiViewUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiViewUsuarioActionPerformed(evt);
            }
        });
        jmAdmin.add(jmiViewUsuario);

        jmiViewMsg.setText("Visualizar Mensagens do Grupo");
        jmiViewMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiViewMsgActionPerformed(evt);
            }
        });
        jmAdmin.add(jmiViewMsg);

        jmbMenu.add(jmAdmin);

        setJMenuBar(jmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtDesktop)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtDesktop)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class ExecutarLongPolling implements Runnable{

        @Override
        public void run() {
            try {
                UsuarioServices us = ServicesFactory.getUsuarioServices();
                usuarios = us.buscarUsuarios(userLogado.getEmail());
                
                while (true) {
                    mostrarUsuarios();
                    Thread.sleep(5000);
                }//fecha for
            } catch (Exception e) {
            }
        }
        
    }
    
    
    private void mostrarUsuarios(){
        try {
            UsuarioServices us = ServicesFactory.getUsuarioServices();
            usuarios = us.buscarUsuarios(userLogado.getEmail());
            
            DefaultListModel dlm = new DefaultListModel();
            
            for (int i = 0; i < usuarios.size(); i++) {
                dlm.addElement(usuarios.get(i));
            }//fecha for
            jlLista.setModel(dlm);
            
            if(usuarios.isEmpty()){
                jbDetalhe.setEnabled(false);
                jbIniciarChat.setEnabled(false);
            }else{
                jbDetalhe.setEnabled(true);
                jbIniciarChat.setEnabled(true);
            }
            
            
        } catch (Exception e) {
        }
    }
    
    private void abrirEditarPerfil() throws Exception{
        if(!flagEditPerfil){
            GUIEditarPerfil guiEditPerfil = new GUIEditarPerfil(userLogado);
            guiEditPerfil.setVisible(true);
            flagEditPerfil = true;
            jtDesktop.add(guiEditPerfil);
            guiEditPerfil.addInternalFrameListener(this);
        }
    }
    
    private void abrirEditarSenha() throws SQLException{
        if(!flagEditSenha){
            GUIEditSenha guiSenha = new GUIEditSenha(userLogado);
            guiSenha.setVisible(true);
            flagEditSenha = true;
            jtDesktop.add(guiSenha);
            guiSenha.addInternalFrameListener(this);
        }
    }
    
    private void abrirEditEndereco() throws SQLException{
        if(!flagEditEndereco){
            EnderecoServices uss = ServicesFactory.getEnderecoServices();
            EnderecoVO eVO = uss.buscarEnderecoPorEmail(userLogado.getEmail());
            
            GUIEditEndereco guiEditEndereco = new GUIEditEndereco(eVO);
            guiEditEndereco.setVisible(true);
            flagEditEndereco = true;
            jtDesktop.add(guiEditEndereco);
            guiEditEndereco.addInternalFrameListener(this);
        }
    }
    
    private void abrirPagAlteraOuAdcImg() throws SQLException{
        if(!flagAdcImagem){
            UsuarioServices userS = ServicesFactory.getUsuarioServices();
            UsuarioVO u = userS.buscarUsuarioPorEmail(userLogado.getEmail());
            
            GUIAdcImagem guiImg = new GUIAdcImagem(u);
            guiImg.setVisible(true);
            flagAdcImagem = true;
            jtDesktop.add(guiImg);
            guiImg.addInternalFrameListener(this);
        }
    }
    
    private void iniciarChat(){
        try {
            if(!flagChat){
                UsuarioServices userS = ServicesFactory.getUsuarioServices();
                UsuarioVO u = userS.buscarUsuarioPorEmail(userLogado.getEmail());
                ChatCliente chat = new ChatCliente(u);
                chat.setVisible(true);
                flagChat = true;
                jtDesktop.add(chat);
                chat.addInternalFrameListener(this);
            }
        } catch (Exception e) {
        }
    }
    
    private void excluirConta() throws SQLException{     
        if(!flagExcluirConta){
            UsuarioServices userDel = ServicesFactory.getUsuarioServices();
            UsuarioVO u = userDel.buscarUsuarioPorEmail(userLogado.getEmail());
            GUIExcluirConta excluirConta = new GUIExcluirConta(u);
            excluirConta.setVisible(true);
            flagExcluirConta = true;
            jtDesktop.add(excluirConta);
            excluirConta.addInternalFrameListener(this);
        }
        
    }//fecha método
    
    private void mostrarUsuariosCadastrados(){
        if(!flagViewUsuarios){
            GUIViewUsuario viewUser = new GUIViewUsuario();
            viewUser.setVisible(true);
            jtDesktop.add(viewUser);
            flagViewUsuarios = true;
            viewUser.addInternalFrameListener(this);
        }
        
    }//fecha metodo
    
    private void mostrarMsgsdoGrupo(){
        if(!flagViewMensagensGrupo){
            GUIViewMensagemGrupo viewMsgGP = new GUIViewMensagemGrupo();
            viewMsgGP.setVisible(true);
            jtDesktop.add(viewMsgGP);
            flagViewMensagensGrupo = true;
            viewMsgGP.addInternalFrameListener(this);
        }
    }
    
    private void deslogarUsuario() throws SQLException{   
        userLogado.setStatus("Offline");
        UsuarioServices us = ServicesFactory.getUsuarioServices();
        us.alterarStatus(userLogado);
        Garbage.carregarMemoria();
        Garbage.limparMemoria();
        GUILogin guiLogin = new GUILogin();
        guiLogin.setVisible(true);
        this.setVisible(false);
    }
    
    private void sairPrograma() throws SQLException{
        userLogado.setStatus("Offline");
        UsuarioServices us = ServicesFactory.getUsuarioServices();
        us.alterarStatus(userLogado);
        Garbage.carregarMemoria();
        Garbage.limparMemoria();
        System.exit(0);
    }
    
    private void selecionarUsuario() throws SQLException{
        if (!(jlLista.getSelectedIndex() == -1)) {
            String valor = String.valueOf(jlLista.getSelectedValue()); 
            String email[] = valor.split("-");
            UsuarioServices us = ServicesFactory.getUsuarioServices();
            UsuarioVO user = us.buscarUsuarioPorEmail(email[1]);
            if(!flagDetalhe){
                GUIDetalhePessoa detalhe = new GUIDetalhePessoa(user);
                detalhe.setVisible(true);
                jtDesktop.add(detalhe);
                flagDetalhe = true;
                detalhe.addInternalFrameListener(this);
            }
        }else {
            JOptionPane.showMessageDialog(this,"Selecione uma pessoa!");
        }
    }
    
    
            
    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        try {
            sairPrograma();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jmiDeslogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDeslogarActionPerformed
        try {
            deslogarUsuario();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiDeslogarActionPerformed

    private void jmiEditarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEditarPerfilActionPerformed
        try {
            abrirEditarPerfil();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jmiEditarPerfilActionPerformed

    private void jmiSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSenhaActionPerformed
        try {
            abrirEditarSenha();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiSenhaActionPerformed

    private void jmiAlterarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarEnderecoActionPerformed
        try {
            abrirEditEndereco();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiAlterarEnderecoActionPerformed

    private void jmiAlterarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarFotoActionPerformed
        try {
            abrirPagAlteraOuAdcImg();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiAlterarFotoActionPerformed

    private void jbIniciarChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIniciarChatActionPerformed
        iniciarChat();
    }//GEN-LAST:event_jbIniciarChatActionPerformed

    private void jmiExcluirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExcluirContaActionPerformed
        try {
            excluirConta();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jmiExcluirContaActionPerformed

    private void jmiViewUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiViewUsuarioActionPerformed
        mostrarUsuariosCadastrados();
    }//GEN-LAST:event_jmiViewUsuarioActionPerformed

    private void jmiViewMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiViewMsgActionPerformed
        mostrarMsgsdoGrupo();
    }//GEN-LAST:event_jmiViewMsgActionPerformed

    private void jbDetalheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDetalheActionPerformed
        try {
            selecionarUsuario();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jbDetalheActionPerformed

    private void jbDetalheKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbDetalheKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                selecionarUsuario();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_jbDetalheKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
              // new GUIMenuPrincipal().setVisible(true);
            }
        });
    }//fecha metodo main

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton jbDetalhe;
    private javax.swing.JButton jbIniciarChat;
    private javax.swing.JList<String> jlLista;
    private javax.swing.JMenu jmAdmin;
    private javax.swing.JMenu jmConfiguracao;
    private javax.swing.JMenu jmEndereco;
    private javax.swing.JMenu jmUsuario;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JMenuItem jmiAlterarEndereco;
    private javax.swing.JMenuItem jmiAlterarFoto;
    private javax.swing.JMenuItem jmiDeslogar;
    private javax.swing.JMenuItem jmiEditarPerfil;
    private javax.swing.JMenuItem jmiExcluirConta;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JMenuItem jmiSenha;
    private javax.swing.JMenuItem jmiViewMsg;
    private javax.swing.JMenuItem jmiViewUsuario;
    private javax.swing.JDesktopPane jtDesktop;
    // End of variables declaration//GEN-END:variables

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
        if(e.getInternalFrame() instanceof GUIEditarPerfil){
            flagEditPerfil = false;
        }
        if(e.getInternalFrame() instanceof GUIEditSenha){
            flagEditSenha = false;
        }
        if(e.getInternalFrame() instanceof GUIEditEndereco){
            flagEditEndereco = false;
        }
        if(e.getInternalFrame() instanceof GUIAdcImagem){
            flagAdcImagem = false;
        }
        if(e.getInternalFrame() instanceof ChatCliente){
            flagChat = false;
        }
        if(e.getInternalFrame() instanceof GUIExcluirConta){
            flagExcluirConta = false;
        }
        if(e.getInternalFrame() instanceof GUIViewUsuario){
            flagViewUsuarios = false;
        }
        if(e.getInternalFrame() instanceof GUIViewMensagemGrupo){
            flagViewMensagensGrupo = false;
        }
        if(e.getInternalFrame() instanceof GUIDetalhePessoa){
            flagDetalhe = false;
        }
        
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {
    }
}
