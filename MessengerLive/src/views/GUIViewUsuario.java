/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.EnderecoVO;
import services.ServicesFactory;
import services.UsuarioServices;

/**
 *
 * @author Luan Junior
 */
public class GUIViewUsuario extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID","Nome", "E-mail", "Data de Cadastro", "Telefone","Estado","Cidade","Bairro"});
    
    /**
     * Creates new form GUIViewUsuario
     */
    public GUIViewUsuario() {
        initComponents();
        
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtableUsuario = new javax.swing.JTable();
        jtFiltro = new javax.swing.JTextField();
        jlPesq = new javax.swing.JLabel();
        jcomboFiltro = new javax.swing.JComboBox<>();
        jbAtualizar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Tabela de Usu√°rios cadastrados no sistema");

        jtableUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "E-mail", "Data de Cadastro", "Telefone", "Estado", "Cidade", "Bairro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableUsuario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtableUsuario);

        jtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtFiltroKeyReleased(evt);
            }
        });

        jlPesq.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlPesq.setText("Pesquisar Por:");

        jcomboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nome", "Email", "Estado", "Cidade" }));

        jbAtualizar.setText("Atualizar");
        jbAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });
        jbAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAtualizarKeyPressed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jbLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbLimparKeyPressed(evt);
            }
        });

        jButton1.setText("Excluir");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jlPesq)
                        .addGap(18, 18, 18)
                        .addComponent(jcomboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcomboFiltro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlPesq)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtFiltroKeyReleased
        buscarFiltro();
    }//GEN-LAST:event_jtFiltroKeyReleased

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        preencherTabela();
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAtualizarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            limparTabela();
        }
    }//GEN-LAST:event_jbAtualizarKeyPressed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limparTabela();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLimparKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            limparTabela();
        }
    }//GEN-LAST:event_jbLimparKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        deletar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            deletar();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void preencherTabela() {
        try {
            //Buscando objeto ProdutoServicos     
            UsuarioServices us = ServicesFactory.getUsuarioServices();

            /* Criando um ArrayList<ProdutoVO> vazio
             para receber o ArrayList com os dados */
            ArrayList<EnderecoVO> e = new ArrayList<>();

            //Recebendo o ArrayList cheio em produtos
            e = us.mostrarUsuarios();

            /* Limpando qualquer dado existente 
             na tabela */
            limparTabela();

            /* For que preenche o modelo de tabela (dtm) buscando 
               dados do ArrayList chamado p. */
            for (int i = 0; i < e.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(e.get(i).getUsuario().getIdUsuario()),
                    String.valueOf(e.get(i).getUsuario().getNomeCompleto()),
                    String.valueOf(e.get(i).getUsuario().getEmail()),
                    String.valueOf(e.get(i).getUsuario().getDataCad()),
                    String.valueOf(e.get(i).getUsuario().getTelefone()),
                    String.valueOf(e.get(i).getEstado()),
                    String.valueOf(e.get(i).getCidade()),
                    String.valueOf(e.get(i).getBairro())
                });
            }//fecha for

            /* Adicionando o modelo de tabela 
             com os dados na tabela produto */
            jtableUsuario.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro! " + e.getMessage());
        }
    }//fecha metodo
    
     private void deletar() {
        try {
            /* Buscando a linha que o usu√°rio clicou */
            int linha = jtableUsuario.getSelectedRow();
            /* Testando se o usu√°rio selecionou alguma linha. */
            if (linha != -1) {
                /* Buscando o idProduto da linha selecionada. Nesse primeiro
                 momento estamos buscando o idProduto como String */
                String idUsuario = (String) jtableUsuario.getValueAt(linha, 0);

                //Chamando os servi√ßos para utilizar o m√©todo deletar
                UsuarioServices us = ServicesFactory.getUsuarioServices();
                /* Convertendo a String idProduto para int e passando para o 
                 m√©todo deletar. */
                us.excluirConta(Long.parseLong(idUsuario));

                preencherTabela();

                //Mensagem de sucesso!
                JOptionPane.showMessageDialog(this,
                        "Usu√°rio excluido com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this,
                        "Voc√™ n√£o selecionou nenhuma linha!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao deletar! " + e.getMessage());
        }
    }//fecha metodo
    
    private void buscarFiltro() {
        try {
            /* Se o text field n√£o estiver vazio ele busca! */
            if (!jtFiltro.getText().isEmpty()) {
                UsuarioServices us = ServicesFactory.getUsuarioServices();
               
                /* Buscando o valor da JComboBox. O m√©todo getSelectedItem
                    devolve um Object selecionado na JCombo */
                String pesquisa = (String) jcomboFiltro.getSelectedItem();

                String query;
       
                if(pesquisa.equals("ID")){
                    query = "AND u.id_usuario = "+jtFiltro.getText();
                }else if(pesquisa.equals("Nome")){
                    query = "AND nome LIKE '%" + jtFiltro.getText() + "%' ";
                }else if(pesquisa.equals("Email")){
                    query = "AND email LIKE '%" + jtFiltro.getText() + "%' ";
                }else if(pesquisa.equals("Estado")){
                    query = "AND estado = '"+jtFiltro.getText()+"'";
                }else{
                    query = "AND cidade LIKE '%" + jtFiltro.getText() + "%' ";
                }
                
                ArrayList<EnderecoVO> e = new ArrayList<>();               
                /* Buscando um ArrayList conforme o filtro que o usu√°rio
                    solicitou. */
                e = us.filtrarUsuarios(query);
                
                //Limpando a tabela
                limparTabela();
   
              for (int i = 0; i < e.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(e.get(i).getUsuario().getIdUsuario()),
                    String.valueOf(e.get(i).getUsuario().getNomeCompleto()),
                    String.valueOf(e.get(i).getUsuario().getEmail()),
                    String.valueOf(e.get(i).getUsuario().getDataCad()),
                    String.valueOf(e.get(i).getUsuario().getTelefone()),
                    String.valueOf(e.get(i).getEstado()),
                    String.valueOf(e.get(i).getCidade()),
                    String.valueOf(e.get(i).getBairro())
                });
            }//fecha for
                jtableUsuario.setModel(dtm);
            }else{
                preencherTabela();
            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao buscar! " + e.getMessage());
        }//fecha catch
    }//fecha m√©todo
    
    private void limparTabela() {
        dtm.setNumRows(0);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JComboBox<String> jcomboFiltro;
    private javax.swing.JLabel jlPesq;
    private javax.swing.JTextField jtFiltro;
    private javax.swing.JTable jtableUsuario;
    // End of variables declaration//GEN-END:variables
}
