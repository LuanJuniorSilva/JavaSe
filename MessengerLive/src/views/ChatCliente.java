/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import core.Validation;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.SQLException;
import java.util.Scanner;
import javax.swing.JOptionPane;
import models.MensagemGrupoVO;
import models.UsuarioVO;
import services.MensagemGrupoServices;
import services.ServicesFactory;

/**
 *
 * @author Luan Junior
 */
public class ChatCliente extends javax.swing.JInternalFrame {
    private Socket socket;
    private PrintWriter escritor;
    private UsuarioVO usuario; 
    private Scanner leitor;
    /**
     * Creates new form ChatCliente
     */
    public ChatCliente(UsuarioVO u) throws IOException {
        initComponents();
        configurarRede();
        this.usuario = u;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textoParaEnviar = new javax.swing.JTextField();
        jbEnviar = new javax.swing.JButton();
        jScrollRolagem = new javax.swing.JScrollPane();
        textoRecebido = new javax.swing.JTextArea();

        setClosable(true);
        setTitle("Chat para conversar");

        textoParaEnviar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoParaEnviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoParaEnviarKeyPressed(evt);
            }
        });

        jbEnviar.setText("Enviar");
        jbEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });
        jbEnviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbEnviarKeyPressed(evt);
            }
        });

        textoRecebido.setEditable(false);
        textoRecebido.setColumns(20);
        textoRecebido.setRows(5);
        jScrollRolagem.setViewportView(textoRecebido);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollRolagem)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textoParaEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollRolagem, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoParaEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class EscutaServidor implements Runnable{
        @Override
        public void run() {
           try{
                String texto;
                while((texto = leitor.nextLine()) != null){
                    textoRecebido.append(texto + "\n");
                }
           }catch(Exception x){}
        }
        
    }//fecha método que escuta servidor
    
    private void enviarConversa() throws SQLException{
        try {
            if(Validation.validarMsg(textoParaEnviar.getText())){
                MensagemGrupoVO mensagemGrupo = new MensagemGrupoVO();
                mensagemGrupo.setIdDe(usuario.getIdUsuario());
                mensagemGrupo.setMensagem(textoParaEnviar.getText());
                MensagemGrupoServices msgs = ServicesFactory.getMensagemGrupoServices();
                msgs.salvarMensagem(mensagemGrupo);
                escritor.println(usuario.getNomeCompleto() + " diz: \n      " + textoParaEnviar.getText());
                escritor.flush();
                textoParaEnviar.setText(null);
                textoParaEnviar.requestFocus();
            }else{
                throw new Exception("Por Favor preencha o campo da forma correta");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERRO",JOptionPane.ERROR_MESSAGE);
        }
        
    }//fecha método que envia conversa
    
    private void configurarRede() throws IOException{
        try{  
             socket = new Socket("127.0.0.1", 5000);
             escritor = new PrintWriter(socket.getOutputStream());
             leitor = new Scanner(socket.getInputStream());
             new Thread(new ChatCliente.EscutaServidor()).start();
        }catch(Exception e){
            
        }
    }//fecha método de configuração de Rede
    
    private void jbEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnviarActionPerformed
        try {
            enviarConversa();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jbEnviarActionPerformed

    private void jbEnviarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbEnviarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                enviarConversa();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_jbEnviarKeyPressed

    private void textoParaEnviarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoParaEnviarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                enviarConversa();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_textoParaEnviarKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollRolagem;
    private javax.swing.JButton jbEnviar;
    private javax.swing.JTextField textoParaEnviar;
    private javax.swing.JTextArea textoRecebido;
    // End of variables declaration//GEN-END:variables
}
